[tool.poetry]
name = "painting_estimation"
version = "0.1.0"
description = "ML service for painting value estimation"
authors = ["RBRU team3 <nicepeoplefrom@raiffeisen.ru>"]

[tool.poetry.dependencies]
python = "^3.10,<3.11"
fastapi = "*"
python-telegram-bot = "*"
uvicorn = "*"
gunicorn = "*"
python-multipart = "*"
mlem = {version = "*", extras = ["flyio"]}
prometheus-client = "*"
prometheus-fastapi-instrumentator = "*"
opencv-python = "*"
pillow = "*"
onnxruntime = "*"
joblib = "^1.2.0"
lightgbm = "^3.3.5"


[tool.poetry.group.dev.dependencies]
ipykernel = "^6.0"
matplotlib = "^3.0"
seaborn = "^0.12"
ipywidgets = "^8.0"
tqdm = "*"

[tool.poetry.group.test.dependencies]
pytest = "^7.0"
pytest-cov = "^4.0"
coverage = "^7.0"
mypy = "^1.0"
pylint = "^2.15.6"

[tool.poetry.group.format.dependencies]
black = "^22.0"
autoflake ="^1.4"
docformatter ="^1.4"
isort ="^5.0"
pyupgrade ="^2.0"
pybetter ="^0.4"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.mypy]
python_version = "3.10"
pretty = true
ignore_missing_imports = true
namespace_packages = true
check_untyped_defs = true

[[tool.mypy.overrides]]
module = [
    "pandas", "pytz", "dateutil", "toml",
]
ignore_missing_imports = true

[tool.pytest.ini_options]
addopts = [
    "--cov-report=term-missing",
    "--cov-report=xml:./coverage.xml",
    "--cov=./painting_estimation",
]
log_cli = true
log_cli_level = "DEBUG"

[tool.pylint]
    [tool.pylint.master]
    fail-under = 9
    good-names-rgxs="^[_a-z][_a-z0-9]?$"
    extension-pkg-whitelist = ["math", "numpy", "pydantic"]
    disable = [
      "raw-checker-failed",
      "bad-inline-option",
      "locally-disabled",
      "file-ignored",
      "suppressed-message",
      "useless-suppression",
      "deprecated-pragma",
      "use-symbolic-message-instead",
      "too-few-public-methods",
      "logging-fstring-interpolation",
      "logging-format-interpolation",
      'missing-module-docstring',
      'missing-class-docstring',
      'missing-function-docstring',
  ]
    [tool.pylint."FORMAT"]
    max-line-length = 120

[tool.black]
line-length = 120
target-version = ["py310"]
include = '\.pyi?$'
skip-string-normalization = true
exclude = '''
(
  /(
    | \.git
    | \.mypy_cache
  )/
)
'''

[tool.isort]
line_length = 120
sections = ['FUTURE', 'STDLIB', 'THIRDPARTY', 'FIRSTPARTY', 'LOCALFOLDER']
no_lines_before = ['STDLIB', 'LOCALFOLDER']
known_third_party = []
multi_line_output = 3
lines_after_imports = 2

[tool.docformatter]
wrap-summaries=120
wrap-descriptions=120
